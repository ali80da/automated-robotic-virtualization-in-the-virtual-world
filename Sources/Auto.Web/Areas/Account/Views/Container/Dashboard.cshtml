@using Auto.Web.Areas.Account.Controllers
@model DashboardViewModel
@{
	ViewData["Title"] = $"داشبورد";
	var chartData = System.Text.Json.JsonSerializer.Serialize(Model.ImageUsage);
	var statuses = new[] { "running", "exited", "paused", "created" };
}

<div class="p-6">
	<h2 class="text-2xl font-bold mb-4">Docker Dashboard</h2>

	<form method="get" class="row g-2 mb-4">
		<div class="col-md-4">
			<input type="text" name="search" class="form-control" placeholder="Search by name or image" value="@Model.SearchTerm" />
		</div>
		<div class="col-md-3">
			<select name="status" class="form-select">
				<option value="">All Statuses</option>
				@foreach (var s in statuses)
				{
					<option value="@s" selected="@(Model.StatusFilter == s ? "selected" : null)">@s</option>
				}
			</select>
		</div>
		<div class="col-md-3">
			<select name="image" class="form-select">
				<option value="">All Images</option>
				@foreach (var img in Model.AvailableImages)
				{
					<option value="@img" selected="@(Model.ImageFilter == img ? "selected" : null)">@img</option>
				}
			</select>
		</div>
		<div class="col-md-2">
			<button type="submit" class="btn btn-primary w-100">Filter</button>
		</div>
	</form>

	<div class="mb-3">
		<strong>Total:</strong> @Model.TotalContainers |
		<strong>Running:</strong> @Model.Running |
		<strong>Exited:</strong> @Model.Exited
	</div>

	<table class="table table-bordered table-striped">
		<thead>
			<tr>
				<th>ID</th>
				<th>Name</th>
				<th>Image</th>
				<th>Status</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var c in Model.Containers)
			{
				<tr>
					<td>@c.ID.Substring(0, 12)</td>
					<td>@c.Name</td>
					<td>@c.Image</td>
					<td>@c.Status</td>
					<td>
						<form method="post" asp-action="Start" asp-route-id="@c.ID" style="display:inline">
							<button type="submit" class="btn btn-success btn-sm">Start</button>
						</form>
						<form method="post" asp-action="Stop" asp-route-id="@c.ID" style="display:inline">
							<button type="submit" class="btn btn-warning btn-sm">Stop</button>
						</form>
						<form method="post" asp-action="Remove" asp-route-id="@c.ID" style="display:inline">
							<button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Remove this container?')">Remove</button>
						</form>
					</td>
				</tr>
			}
		</tbody>
	</table>


	<div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
		<div class="bg-white shadow rounded p-4">
			<h3 class="text-sm text-gray-500">Total Containers</h3>
			<p class="text-2xl font-semibold">@Model.TotalContainers</p>
		</div>
		<div class="bg-green-100 shadow rounded p-4">
			<h3 class="text-sm text-gray-600">Running</h3>
			<p class="text-2xl font-bold text-green-800">@Model.Running</p>
		</div>
		<div class="bg-red-100 shadow rounded p-4">
			<h3 class="text-sm text-gray-600">Exited</h3>
			<p class="text-2xl font-bold text-red-800">@Model.Exited</p>
		</div>
	</div>

	<div class="bg-white shadow rounded p-4 w-50 h-50">
		<h3 class="text-lg font-semibold mb-2">Container Images Usage</h3>
		<canvas id="imageChart"></canvas>
	</div>
</div>

@section Scripts {

	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script>
		const chartData = @Html.Raw(chartData);
		const ctx = document.getElementById('imageChart').getContext('2d');
		new Chart(ctx, {
			type: 'pie',
			data: {
				labels: Object.keys(chartData),
				datasets: [{
					data: Object.values(chartData),
					backgroundColor: ['#4ade80','#60a5fa','#f87171','#facc15','#c084fc']
				}]
			}
		});
	</script>

}