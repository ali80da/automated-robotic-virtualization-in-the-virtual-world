@model DockerComposeViewModel
@{
	ViewData["Title"] = $"مدیریت داکر کوپوز";


}

<div class="container mx-auto p-6">

<h2>🧩 Docker Compose Manager</h2>

<!-- Upload Compose File -->
<form method="post" asp-action="Upload" enctype="multipart/form-data" class="mb-4">
    <label class="form-label fw-bold">📁 Upload docker-compose.yml:</label>
    <div class="input-group">
        <input type="file" class="form-control" name="yamlFile" accept=".yml,.yaml" required />
        <button class="btn btn-secondary" type="submit">📥 Upload</button>
    </div>
</form>


<!-- Compose YAML Textarea Input -->
<form method="post" asp-action="Parse" class="mb-4">
    <label class="form-label fw-bold">✍️ Paste Compose YAML:</label>
    <textarea name="YamlContent" rows="10" class="form-control" placeholder="version: '3'&#10;services: ...">@Model.YamlContent</textarea>

    <!-- Optional Save Name -->
    <div class="mt-2">
        <label class="form-label">💾 Optional File Name (e.g. myproject.yml)</label>
        <input name="FileName" class="form-control" value="@Model.FileName" placeholder="myproject.yml" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">🔍 Parse Services</button>
</form>



<!-- Parsed Services -->
@if (Model.Services?.Any() == true)
{

    <div class="alert alert-info">
        <strong>Services Found:</strong>
        <ul>
            @foreach (var s in Model.Services)
            {
                <li>🔧 @s</li>
            }
        </ul>
    </div>


    <form method="post" asp-action="Run" class="d-inline">
        <input type="hidden" name="YamlContent" value="@Model.YamlContent" />
        <button class="btn btn-success">🚀 Run</button>
    </form>

    <form method="post" asp-action="Stop" class="d-inline ms-2">
        <input type="hidden" name="YamlContent" value="@Model.YamlContent" />
        <button class="btn btn-danger">🛑 Stop</button>
    </form>

}

</div>